import { useState, useEffect, useCallback } from 'react';
import './FloatingBall.css';

interface FloatingBallProps {
  size?: number;
  color?: string;
  onClick?: () => void;
}

const CartIcon = () => (
  <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" fill="none" version="1.1" width="24" height="24" viewBox="0 0 24 24">
    <defs>
      <clipPath id="master_svg0_218_25">
        <rect x="0" y="0" width="24" height="24" rx="0"/>
      </clipPath>
    </defs>
    <g clipPath="url(#master_svg0_218_25)">
      <g>
        <path d="M4.131999694824219,3.8049997425079347Q4.115999694824219,3.7349997425079344,4.0879996948242185,3.6679997425079347Q4.059999694824219,3.6019997425079344,4.021999694824219,3.541999742507935Q3.982999694824219,3.4819997425079348,3.934999694824219,3.4279997425079345Q3.886999694824219,3.3739997425079347,3.830999694824219,3.3299997425079346Q3.774999694824219,3.2849997425079347,3.7109996948242188,3.2499997425079346Q3.6489996948242185,3.2160000425079347,3.580999694824219,3.1919999425079344Q3.512999694824219,3.1689999425079347,3.4419996948242186,3.1569998425079344Q3.371999694824219,3.1449997425079346,3.2999996948242187,3.1449997425079346Q3.1999996948242186,3.1449997425079346,3.1039996948242186,3.1679997425079347Q3.0339996948242187,3.1839997425079347,2.967999694824219,3.2119996425079345Q2.9019996948242186,3.2399997425079348,2.841999694824219,3.2779997425079346Q2.7809996948242186,3.3169997425079347,2.7279996948242187,3.3649997425079348Q2.673999694824219,3.4129997425079344,2.629999694824219,3.4689997425079344Q2.584999694824219,3.5249997425079345,2.5499996948242187,3.5889997425079345Q2.515999994824219,3.650999742507935,2.4919998948242186,3.7189997425079344Q2.468999894824219,3.7869997425079345,2.4569997948242186,3.8569997425079343Q2.4449996948242188,3.9279997425079345,2.4449996948242188,3.9999997425079346Q2.4449996948242188,4.099999742507935,2.466999794824219,4.194999742507934L4.870999694824219,14.427999742507934Q5.074999694824219,15.297999742507935,5.776999694824219,15.853999742507934Q6.476999694824219,16.409999742507935,7.371999694824218,16.409999742507935L16.62199969482422,16.409999742507935Q17.53299969482422,16.409999742507935,18.24199969482422,15.834999742507934Q18.94899969482422,15.258999742507935,19.135999694824218,14.366999742507934L20.132999694824218,9.601999742507935Q20.382999694824218,8.404999742507934,19.612999694824218,7.4559997425079345Q18.84099969482422,6.505999742507935,17.61799969482422,6.505999742507935L5.1569996948242185,6.505999742507935Q4.961999694824218,6.505999742507935,4.786999694824219,6.590999742507934L4.131999694824219,3.8049997425079347ZM5.167999694824219,8.215999742507934L6.535999694824219,14.035999742507935Q6.603999694824219,14.327999742507934,6.8379996948242185,14.513999742507934Q7.072999694824219,14.699999742507934,7.371999694824218,14.699999742507934L16.62199969482422,14.699999742507934Q16.92599969482422,14.699999742507934,17.161999694824217,14.506999742507935Q17.399999694824217,14.314999742507934,17.461999694824218,14.016999742507934L18.458999694824218,9.251999742507934Q18.542999694824218,8.851999742507935,18.28499969482422,8.533999742507934Q18.02699969482422,8.215999742507934,17.61799969482422,8.215999742507934L5.167999694824219,8.215999742507934Z" fillRule="evenodd" fill="#000000" fillOpacity="1"/>
      </g>
      <g>
        <ellipse cx="7.615999937057495" cy="18.675999402999878" rx="1.2860000133514404" ry="1.2860000133514404" fill="#000000" fillOpacity="1"/>
      </g>
      <g>
        <ellipse cx="16.386000394821167" cy="18.675999402999878" rx="1.2860000133514404" ry="1.2860000133514404" fill="#000000" fillOpacity="1"/>
      </g>
    </g>
  </svg>
);

const FloatingBall: React.FC<FloatingBallProps> = ({
  size = 60,
  color = '#1890ff',
  onClick
}) => {
  const [position, setPosition] = useState({ x: window.innerWidth - 80, y: window.innerHeight - 80 });
  const [isDragging, setIsDragging] = useState(false);
  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });

  const handleMouseDown = useCallback((e: React.MouseEvent) => {
    setIsDragging(true);
    setDragStart({
      x: e.clientX - position.x,
      y: e.clientY - position.y
    });
  }, [position]);

  const handleMouseMove = useCallback((e: MouseEvent) => {
    if (isDragging) {
      const newX = Math.min(Math.max(0, e.clientX - dragStart.x), window.innerWidth - size);
      const newY = Math.min(Math.max(0, e.clientY - dragStart.y), window.innerHeight - size);
      setPosition({ x: newX, y: newY });
    }
  }, [isDragging, dragStart, size]);

  const handleMouseUp = useCallback(() => {
    setIsDragging(false);
  }, []);

  useEffect(() => {
    if (isDragging) {
      window.addEventListener('mousemove', handleMouseMove);
      window.addEventListener('mouseup', handleMouseUp);
    }
    return () => {
      window.removeEventListener('mousemove', handleMouseMove);
      window.removeEventListener('mouseup', handleMouseUp);
    };
  }, [isDragging, handleMouseMove, handleMouseUp]);

  return (
    <div
      className="floating-ball"
      style={{
        width: size,
        height: size,
        backgroundColor: color,
        left: position.x,
        top: position.y,
        cursor: isDragging ? 'grabbing' : 'grab'
      }}
      onMouseDown={handleMouseDown}
      onClick={onClick}
    >
      <CartIcon />
    </div>
  );
};

export default FloatingBall; 